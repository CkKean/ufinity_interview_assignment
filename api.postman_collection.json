{
	"info": {
		"_postman_id": "e2f41dd9-ccdd-40e2-a919-88fbebb3a481",
		"name": "Ufinity",
		"description": "APIs are available for the test assignment from Ufinity.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9117478"
	},
	"item": [
		{
			"name": "student",
			"item": [
				{
					"name": "/commonstudents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/commonstudents",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"commonstudents"
							],
							"query": [
								{
									"key": "teacher",
									"value": "teacherken@gmail.com",
									"description": "Return [\"commonstudent1@gmail.com\", \"commonstudent2@gmail.com\", \"commonstudent5@gmail.com\"]",
									"disabled": true
								},
								{
									"key": "teacher",
									"value": "teacherjoe@gmail.com",
									"description": "Return [\"commonstudent2@gmail.com\", \"commonstudent3@gmail.com\"]",
									"disabled": true
								},
								{
									"key": "teacher",
									"value": "teacherkang@gmail.com",
									"description": "Return []",
									"disabled": true
								},
								{
									"key": "teacher",
									"value": "teacherken",
									"description": "Return \"Invalid teacher email format.\"",
									"disabled": true
								}
							]
						},
						"description": "- Retrieve a list of students who are common to a given list of teachers."
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"teacher\": \"teacherkang@gmail.com\",\r\n    \"students\": [\r\n        \"studentkang1@gmail.com\",\r\n        \"studentkang2@gmail.com\",\r\n        \"studentkang3@gmail.com\",\r\n        \"commonstudent1@gmail.com\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"register"
							]
						},
						"description": "- Register one or more students to a specified teacher. The API behaves differently based on the conditions below:\n    - a. If the student exists but is unassigned, they will be assigned to the specified teacher.\n    - b. If the student does not exist, a new student record will be created and assigned to the specified teacher.\n    - c. If the student exists and is already assigned, no action will be taken."
					},
					"response": []
				},
				{
					"name": "/suspend",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"student\": \"commonstudent1@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/suspend",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"suspend"
							]
						},
						"description": "Suspend a specified student by student email."
					},
					"response": []
				},
				{
					"name": "/retrievefornotifications",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n  \"teacher\": \"teacherken@gmail.com\",\r\n  \"notification\": \"Hello students! @commonstudent1@gmail.com @studentkang1@gmail.com @commonstudent5@gmail.com @none@gmail.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/retrievefornotifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"retrievefornotifications"
							]
						},
						"description": "- Retrieve a list of students that can receive a given notification by specific teacher. The list of students retrieved should not contain any duplicates/repetitions.\n    \n\n**Example 1:**\n\n**Request Body:**\n\n``` json\n{ \n  \"teacher\": \"teacherken@gmail.com\",\n  \"notification\": \"Hello students!\"\n}\n\n```\n\n**Response Body:**\n\n``` json\n{\n    \"recipients\": [\n        \"commonstudent1@gmail.com\",\n        \"commonstudent2@gmail.com\"\n    ]\n}\n\n```\n\n**Example Reqeust 2:**\n\n**Request Body:**\n\n``` json\n{ \n  \"teacher\": \"teacherken@gmail.com\",\n  \"notification\": \"Hello students! @studentagnes@gmail.com @studentmiche@gmail.com\"\n}\n\n```\n\nResponse Body:\n\n``` json\n{\n    \"recipients\": [\n        \"studentagnes@gmail.com\",\n        \"studentmiche@gmail.com\",\n        \"commonstudent1@gmail.com\",\n        \"commonstudent2@gmail.com\"\n    ]\n}\n\n```"
					},
					"response": []
				}
			],
			"description": "The following APIs are available for the test assignment:"
		},
		{
			"name": "teacher",
			"item": [
				{
					"name": "/create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"teacher_email\":\"ck@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/teachers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"teachers"
							]
						},
						"description": "- Create a new teacher record."
					},
					"response": []
				}
			],
			"description": "APIs available for teacher module."
		},
		{
			"name": "/healthCheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/healthCheck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"healthCheck",
						""
					]
				},
				"description": "- This endpoint is used to check if the system is running or not."
			},
			"response": []
		}
	]
}